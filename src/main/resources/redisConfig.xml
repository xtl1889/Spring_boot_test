<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--连接池配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="100"></property>
        <property name="maxIdle" value="30"></property>
        <property name="minIdle" value="10"></property>
        <property name="testOnBorrow" value="false"></property>
        <property name="testOnReturn" value="false"></property>
        <property name="testOnCreate" value="false"></property>
        <property name="blockWhenExhausted" value="true"></property>
        <property name="maxWaitMillis" value="2000"></property>
    </bean>

    <!--连接redis数据库的配置  usePool true使用连接池 false直连-->
    <bean id="redisConnectionConfig" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:usePool="true" p:poolConfig-ref="poolConfig" p:hostName="192.168.92.131"
          p:port="7654" p:password="123456" p:database="1">

        <!--<property name="port" value="7654"></property>-->
    </bean>

     <!--RedisTemplate本地是jedis的封装 在jedis基础上进行简化 对连接池友好 能够自动回收连接
    例如 自己写的JedisPool 如果没有调用close方法 会出现泄漏问题 利用spring-data-redis则不会-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="redisConnectionConfig">

        <!--对redis数据库中保存的数据的key序列化 采用string原文保存-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>


        <property name="valueSerializer">
            <!--对value string类型序列化-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>-->

            <!--对value 对象类型的序列化-->
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"></bean>
        </property>

        <!--对hash key值的序列化-->
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <!--对hash value值的序列化-->
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"></bean>
        </property>
    </bean>
</beans>