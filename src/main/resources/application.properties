spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springboottest?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=lian1234
#//在控制台显示sql语句
spring.jpa.show-sql=true

server.port=8081

#myBatis设置 核心配置文件
mybatis.config-location=classpath:/mybatis/mybatis-config.xml
#mapper对应的mapper文件
mybatis.mapper-locations=classpath:/mybatis/mapper/*.xml

#显示mybatis 运行的sql语句
logging.level.com.example.mybatis_test.mapper=debug

spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:/db/migration

#关于热部署配置
# 1、在debug 模式下运行项目
# 2、设置 spring.thymeleaf.cache=false (关闭缓存)
# 3、在配置文件中 添加
#       <dependency>
#           <groupId>org.springframework.boot</groupId>
#           <artifactId>spring-boot-devtools</artifactId> (官方提供的热部署工具)
#       </dependency>

#       <plugin>
#           <groupId>org.springframework.boot</groupId>
#           <artifactId>spring-boot-maven-plugin</artifactId>
#           <configuration>
#               <fork>  (增加fork才允许热部署 fork交叉)
#                   true
#               </fork>
#           </configuration>
#       </plugin>
# 4、在Settings-->Compiler 勾选build project automatically 选择
# 5、快捷键 ctrl+shift+a ---> Registry  勾选compiler.automake.allow.when.app.runing (工程编译后 即使工程正在运行 也会自动加载)
spring.thymeleaf.cache=false 


#打包设置
# ---- 打jar包
#  只在设置中进行  edit configurations 中 点击 + --> maven  找到springboot自带的package 打包工具 执行即可

# --- war 包
# 1、基础设置和 jar包相同
# 2、在 pom.xml 文件中
#     <packaging>war</packaging>  默认为jar ---> war
#     添加 dependency
#    <!--在打包时不去加载tomcat 的jar-->
#    <dependency>
#       <groupId>org.springframework.boot</groupId>
#       <artifactId>spring-boot-starter-tomcat</artifactId>
#       <scope>provided</scope>
#       <!--provided 编译时 jar存在 打包运行时 不将jar放到环境中-->
#       <!--complie 默认值 编译 运行 发布时 jar都存在-->
#       <!--provided 运行 本地编译时 不用这个jar 发布时加载-->
#    </dependency>

# 3、在入口类中（MybatisTestApplication）继承 SpringBootServletInitializer 重写 configure 方法
# 4、执行 package 即可生成war包